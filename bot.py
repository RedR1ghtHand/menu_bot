from telebot import *
from telebot.callback_data import CallbackData
from menu_read_db import *




bot = telebot.TeleBot()
mrkp = None
menu_dict = dict(zip(get_dish_list('dish'), get_dish_list('bot_command')))
menu_factory = CallbackData('dish_id', prefix='dish')
user_id = None


@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.send_message(message.chat.id, f'Hello, {message.from_user.first_name}, tap /menu for start')
    global user_id
    user_id = message.chat.id
    create_user_cart(user_id)


@bot.message_handler(commands=['menu'])
def menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)

    category = types.KeyboardButton('/–ö–∞—Ç–µ–≥–æ—Ä—ñ—ó')
    food_rating = types.KeyboardButton('/–†–µ–π—Ç–∏–Ω–≥')
    schedue = types.KeyboardButton('/–ü–ª–∞–Ω—É–≤–∞–ª—å–Ω–∏–∫')

    markup.add(category, food_rating, schedue)
    bot.send_message(message.chat.id, '–û–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª üëá', reply_markup=markup)


@bot.message_handler(commands=['–†–µ–π—Ç–∏–Ω–≥'])
def rating(message):
    dish_name = [item[0] for item in get_dish_rating()]
    dish_rating = [item[1] for item in get_dish_rating()]
    rating_list = f'–¢–û–ü 3 –°–¢–†–ê–í –ü–û –ó–ê–ü–ò–¢–ê–ú:\n\n' \
                  f'{dish_name[0]}: {dish_rating[0]} –∑–∞–ø–∏—Ç–∏(—Ç—ñ–≤)\n\n' \
                  f'{dish_name[1]}: {dish_rating[1]} –∑–∞–ø–∏—Ç–∏(—Ç—ñ–≤)\n\n' \
                  f'{dish_name[2]}: {dish_rating[2]} –∑–∞–ø–∏—Ç–∏(—Ç—ñ–≤)\n\n'.format(dish_name=dish_name,
                                                                             dish_rating=dish_rating)

    bot.send_message(message.chat.id, rating_list)


@bot.message_handler(commands=['–ö–∞—Ç–µ–≥–æ—Ä—ñ—ó'])
def _category(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)

    susi = types.KeyboardButton('/–†–æ–ª–∏_–°—É—à—ñ')
    meat = types.KeyboardButton("/–ú'—è—Å–Ω—ñ_—Å—Ç—Ä–∞–≤–∏")
    pasta = types.KeyboardButton('/–ü–∞—Å—Ç–∞')
    side_dish = types.KeyboardButton('/–ì–∞—Ä–Ω—ñ—Ä–∏')
    pizza = types.KeyboardButton('/–ü—ñ—Ü–∫–∞')
    burgers = types.KeyboardButton('/–ë—É—Ä–≥–µ—Ä–∏')
    breakfast = types.KeyboardButton('/–°–Ω—ñ–¥–∞–Ω–∫–∏')
    wok = types.KeyboardButton('/–í–æ–∫')
    back_to_menu = types.KeyboardButton('/menu')
    # seafood = types.KeyboardButton('/–ú–æ—Ä–µ–ø—Ä–æ–¥—É–∫—Ç–∏')

    markup.add(susi, meat, pasta, side_dish, pizza, burgers, breakfast, wok, back_to_menu)
    bot.send_message(message.chat.id, '–û–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é üëá', reply_markup=markup)


@bot.message_handler(commands=['–†–æ–ª–∏_–°—É—à—ñ'])
def susi_menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)

    nigiri = types.KeyboardButton('–ì—É–Ω–∫–∞–Ω–∏')
    o_nigiri = types.KeyboardButton('–û–Ω—ñ–≥—ñ—Ä–∞–¥–∑—É')
    roll = types.KeyboardButton('–†–æ–ª–∏')
    back = types.KeyboardButton('/–ö–∞—Ç–µ–≥–æ—Ä—ñ—ó')

    markup.add(nigiri, o_nigiri, roll, back)
    bot.send_message(message.chat.id, '–û–±–µ—Ä—ñ—Ç—å —Å—Ç—Ä–∞–≤—É üëá', reply_markup=markup)


@bot.message_handler(commands=['–ü–∞—Å—Ç–∞'])
def pasta_menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)

    cream_pasta = types.KeyboardButton('–í–µ—Ä—à–∫–æ–≤–∞ –ü–∞—Å—Ç–∞')
    lasagna = types.KeyboardButton('–õ–∞–∑–∞–Ω—å—è')
    carbonara = types.KeyboardButton('–ö–∞—Ä–±–æ–Ω–∞—Ä–∞')
    back = types.KeyboardButton('/–ö–∞—Ç–µ–≥–æ—Ä—ñ—ó')

    markup.add(cream_pasta, lasagna, carbonara, back)
    bot.send_message(message.chat.id, '–û–±–µ—Ä—ñ—Ç—å —Å—Ç—Ä–∞–≤—É üëá', reply_markup=markup)


# @bot.message_handler(commands=['–ú–æ—Ä–µ–ø—Ä–æ–¥—É–∫—Ç–∏'], content_types=["text", "photo"])
# def seafood_menu(message):
#     markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
#
#     salmon_bake = types.KeyboardButton('–õ–æ—Å–æ—Å—å –ó–∞–ø–µ—á–µ–Ω–∏–π')
#     salmon = types.KeyboardButton('–°–∞—à–∏–º—ñ')
#     tuna = types.KeyboardButton('–¢—É–Ω–µ—Ü—å')
#     back = types.KeyboardButton('/–ö–∞—Ç–µ–≥–æ—Ä—ñ—ó')
#
#     markup.add(salmon_bake, salmon, tuna, back)
#     bot.send_message(message.chat.id, '–û–±–µ—Ä—ñ—Ç—å —Å—Ç—Ä–∞–≤—É üëá', reply_markup=markup)


@bot.message_handler(commands=['–ì–∞—Ä–Ω—ñ—Ä–∏'])
def side_dish_menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)

    potato_mashed = types.KeyboardButton('–ü—é—Ä–µ –∫–∞—Ä—Ç–æ–ø–ª—è–Ω–µ')
    potato_baked = types.KeyboardButton('–ó–∞–ø–µ—á–µ–Ω–∞ –∫–∞—Ä—Ç–æ–ø–ª—è')
    ready_togo = types.KeyboardButton('–ù–∞–ø—ñ–≤—Ñ–∞–±—Ä–∏–∫–∞—Ç–∏')
    back = types.KeyboardButton('/–ö–∞—Ç–µ–≥–æ—Ä—ñ—ó')

    markup.add(potato_baked, potato_mashed, ready_togo, back)
    bot.send_message(message.chat.id, '–û–±–µ—Ä—ñ—Ç—å —Å—Ç—Ä–∞–≤—É üëá', reply_markup=markup)


@bot.message_handler(commands=['–ü—ñ—Ü–∫–∞'])
def pizza_menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)

    teriyaki = types.KeyboardButton('–ö—É—Ä–∫–∞-—Ç–µ—Ä—ñ—è–∫—ñ')
    seafood_pizza = types.KeyboardButton('–ú–æ—Ä–µ–ø—Ä–æ–¥—É–∫—Ç–∏')
    back = types.KeyboardButton('/–ö–∞—Ç–µ–≥–æ—Ä—ñ—ó')

    markup.add(teriyaki, seafood_pizza, back)
    bot.send_message(message.chat.id, '–û–±–µ—Ä—ñ—Ç—å —Å—Ç—Ä–∞–≤—É üëá', reply_markup=markup)


@bot.message_handler(commands=['–ë—É—Ä–≥–µ—Ä–∏'])
def burgers_menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)

    classic_burger = types.KeyboardButton('–ë—É—Ä–≥–µ—Ä –∫–ª–∞—Å–∏—á–Ω–∏–π')
    chicken_burger = types.KeyboardButton('–ë—É—Ä–≥–µ—Ä –∫—É—Ä—è—á–∏–π')
    back = types.KeyboardButton('/–ö–∞—Ç–µ–≥–æ—Ä—ñ—ó')

    markup.add(classic_burger, chicken_burger, back)
    bot.send_message(message.chat.id, '–û–±–µ—Ä—ñ—Ç—å —Å—Ç—Ä–∞–≤—É üëá', reply_markup=markup)


@bot.message_handler(commands=['–°–Ω—ñ–¥–∞–Ω–∫–∏'])
def breakfast_menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)


@bot.message_handler(commands=['–í–æ–∫'], content_types=["text", "photo"])
def wok_menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)


@bot.message_handler(commands=['–ü–ª–∞–Ω—É–≤–∞–ª—å–Ω–∏–∫'])
def scheduler(message):
    bot.send_message(message.chat.id, '–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ –ø–ª–∞–Ω—É–≤–∞–ª—å–Ω–∏–∫–∞ –º–µ–Ω—é!\n'
                                      '1) –æ–±–µ—Ä—ñ—Ç—å —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–∞–≤\n'
                                      '2) –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –º–µ–Ω—é "–†–û–ó–†–ê–•–£–í–ê–¢–ò"\n'
                                      '3) –±–æ—Ç —Ä–æ–∑—Ä–∞—Ö—É—î –¥–ª—è –í–∞—Å –ø–µ—Ä–µ–ª—ñ–∫ —É—Å—ñ—Ö —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç—ñ–≤ –¥–ª—è –≥–æ—Ç—É–≤–∞–Ω–Ω—è —Ç–∞ –∑—Ä—É—á–Ω–∏—Ö –ø–æ–∫—É–ø–æ–∫!')

    global mrkp
    mrkp = types.InlineKeyboardMarkup(row_width=2)

    calculate = types.InlineKeyboardButton(text='–†–û–ó–†–ê–•–£–í–ê–¢–ò', callback_data='calculate')
    clear = types.InlineKeyboardButton(text='–û—á–∏—Å—Ç–∏—Ç–∏ –∫–æ—à–∏–∫', callback_data='clear')

    mrkp.add(*[
                                              types.InlineKeyboardButton(
                                                  text=dish[1],
                                                  callback_data=menu_factory.new(
                                                      dish_id=dish[0]
                                                  )
                                              ) for dish in menu_dict.items()])
    mrkp.add(clear)
    mrkp.add(calculate)

    bot.send_message(message.chat.id, '–û–±–µ—Ä—ñ—Ç—å —Å—Ç—Ä–∞–≤–∏ –∑—ñ —Å–ø–∏—Å–∫—É:\n–ö–æ—Ä–∑–∏–Ω–∞:', reply_markup=mrkp)
    clear_user_cart(message.chat.id)


@bot.callback_query_handler(func=lambda callback: callback.data)
def callback_answers(callback):
    dish_data = callback.data[callback.data.find(':')+1::]
    if dish_data in get_dish_list('dish'):
        add_to_cart(callback.message.chat.id, data=menu_dict[dish_data])

        bot.edit_message_text(chat_id=callback.message.chat.id,
                              message_id=callback.message.id,
                              reply_markup=mrkp,
                              text='–û–±–µ—Ä—ñ—Ç—å —Å—Ç—Ä–∞–≤–∏ –∑—ñ —Å–ø–∏—Å–∫—É:\n–ö–æ—Ä–∑–∏–Ω–∞:\n{user_cart}'
                              .format(user_cart=get_user_cart(callback.message.chat.id, type_of_return='str')))

    elif callback.data == 'calculate':
        calculate_ingredients = calculate_menu(get_user_cart(callback.message.chat.id, type_of_return='list'))
        bot.send_message(callback.message.chat.id, '–†–æ–∑—Ä–∞—Ö–æ–≤—É—î–º–æ —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç–∏:\n{result}'
                         .format(result=calculate_ingredients))

        clear_user_cart(callback.message.chat.id)

    elif callback.data == 'clear':
        clear_user_cart(callback.message.chat.id)
        bot.edit_message_text(chat_id=callback.message.chat.id,
                              message_id=callback.message.id,
                              reply_markup=mrkp,
                              text='–û–±–µ—Ä—ñ—Ç—å —Å—Ç—Ä–∞–≤–∏ –∑—ñ —Å–ø–∏—Å–∫—É:\n–ö–æ—Ä–∑–∏–Ω–∞:')


@bot.message_handler(content_types=["text"])
def sub_menu(message):
    if message.text in get_dish_list('bot_command'):
        ingredients = get_ingredients(message.text)
        bot.reply_to(message, 'INGREDIENTS:\n' + ingredients.replace('/', '\n', ingredients.count('/')))
        add_rating(message.text)


bot.infinity_polling()
